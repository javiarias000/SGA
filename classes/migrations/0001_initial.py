# Generated by Django 5.2.6 on 2025-10-01 18:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='Nombre completo')),
                ('specialization', models.CharField(blank=True, max_length=100, verbose_name='Especializaci√≥n')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Tel√©fono')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Docente',
                'verbose_name_plural': 'Docentes',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre completo')),
                ('grade', models.CharField(choices=[('2do B√°sica', '2do B√°sica'), ('3ro B√°sica', '3ro B√°sica'), ('4to B√°sica', '4to B√°sica'), ('5to B√°sica', '5to B√°sica'), ('6to B√°sica', '6to B√°sica'), ('7mo B√°sica', '7mo B√°sica'), ('8vo B√°sica', '8vo B√°sica'), ('9no B√°sica', '9no B√°sica'), ('10mo B√°sica', '10mo B√°sica'), ('1ro Bachillerato', '1ro Bachillerato'), ('2do Bachillerato', '2do Bachillerato'), ('3ro Bachillerato', '3ro Bachillerato')], max_length=50, verbose_name='A√±o escolar')),
                ('parent_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre del padre/madre')),
                ('parent_email', models.EmailField(blank=True, max_length=254, verbose_name='Email del padre/madre')),
                ('parent_phone', models.CharField(blank=True, max_length=20, verbose_name='Tel√©fono del padre/madre')),
                ('notes', models.TextField(blank=True, verbose_name='Notas adicionales')),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='classes.teacher', verbose_name='Docente')),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
                'ordering': ['name'],
                'unique_together': {('teacher', 'name', 'grade')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(choices=[('Guitarra Cl√°sica', 'üé∏ Guitarra Cl√°sica'), ('Conjunto Instrumental', 'üé∫ Conjunto Instrumental'), ('Creaci√≥n y Arreglos Musicales', 'üéµ Creaci√≥n y Arreglos Musicales')], max_length=100, verbose_name='Materia')),
                ('period', models.CharField(choices=[('Primer Parcial', 'Primer Parcial'), ('Segundo Parcial', 'Segundo Parcial'), ('Tercer Parcial', 'Tercer Parcial'), ('Examen Final', 'Examen Final'), ('Quimestre 1', 'Quimestre 1'), ('Quimestre 2', 'Quimestre 2')], max_length=50, verbose_name='Per√≠odo')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Calificaci√≥n')),
                ('comments', models.TextField(blank=True, verbose_name='Comentarios')),
                ('date', models.DateField(verbose_name='Fecha de calificaci√≥n')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='classes.student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Calificaci√≥n',
                'verbose_name_plural': 'Calificaciones',
                'ordering': ['-date'],
                'unique_together': {('student', 'subject', 'period')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('status', models.CharField(choices=[('Presente', '‚úÖ Presente'), ('Ausente', '‚ùå Ausente'), ('Tardanza', '‚è∞ Tardanza'), ('Justificado', 'üìù Justificado')], default='Presente', max_length=20, verbose_name='Estado')),
                ('notes', models.TextField(blank=True, verbose_name='Observaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='classes.student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Asistencia',
                'verbose_name_plural': 'Asistencias',
                'ordering': ['-date'],
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(choices=[('Guitarra Cl√°sica', 'üé∏ Guitarra Cl√°sica'), ('Conjunto Instrumental', 'üé∫ Conjunto Instrumental'), ('Creaci√≥n y Arreglos Musicales', 'üéµ Creaci√≥n y Arreglos Musicales')], max_length=100, verbose_name='Materia')),
                ('class_number', models.PositiveIntegerField(verbose_name='N√∫mero de clase')),
                ('date', models.DateField(verbose_name='Fecha de clase')),
                ('topics_worked', models.TextField(blank=True, verbose_name='Temas trabajados')),
                ('techniques', models.TextField(blank=True, verbose_name='T√©cnicas desarrolladas')),
                ('pieces', models.CharField(blank=True, max_length=500, verbose_name='Piezas/Repertorio')),
                ('performance', models.CharField(choices=[('Excelente', 'Excelente'), ('Muy Bueno', 'Muy Bueno'), ('Bueno', 'Bueno'), ('Regular', 'Regular'), ('Necesita mejorar', 'Necesita mejorar')], default='Bueno', max_length=50, verbose_name='Desempe√±o')),
                ('strengths', models.TextField(blank=True, verbose_name='Fortalezas')),
                ('areas_to_improve', models.TextField(blank=True, verbose_name='√Åreas a mejorar')),
                ('homework', models.TextField(blank=True, verbose_name='Tareas para casa')),
                ('practice_time', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(180)], verbose_name='Tiempo de pr√°ctica (minutos)')),
                ('observations', models.TextField(blank=True, verbose_name='Observaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='classes.student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Actividad',
                'verbose_name_plural': 'Actividades',
                'ordering': ['-date', '-class_number'],
                'unique_together': {('student', 'subject', 'class_number')},
            },
        ),
    ]
